import unittest

from writedown.ast import ActNode, DocumentNode
from writedown.parser import Parser

class TestAct(unittest.TestCase):
    def test_no_number_or_title(self):
        doc = Parser().parse_doc("@act")

        self.assertIsInstance(doc, DocumentNode)
        self.assertEqual(len(doc.nodes), 1)

        act = doc.nodes[0]
        self.assertIsInstance(act, ActNode)
        self.assertEqual(act.number, 1) # Autogenerated
        self.assertEqual(act.title, None)

    def test_number_and_title(self):
        doc = Parser().parse_doc("@act 1 One")

        self.assertIsInstance(doc, DocumentNode)
        self.assertEqual(len(doc.nodes), 1)

        act = doc.nodes[0]
        self.assertIsInstance(act, ActNode)
        self.assertEqual(act.number, 1)
        self.assertEqual(act.title, "One")

    def test_number(self):
        doc = Parser().parse_doc("@act 1")

        self.assertIsInstance(doc, DocumentNode)
        self.assertEqual(len(doc.nodes), 1)

        act = doc.nodes[0]
        self.assertIsInstance(act, ActNode)
        self.assertEqual(act.number, 1)
        self.assertEqual(act.title, None)

    def test_title(self):
        doc = Parser().parse_doc("@act One")

        self.assertIsInstance(doc, DocumentNode)
        self.assertEqual(len(doc.nodes), 1)

        act = doc.nodes[0]
        self.assertIsInstance(act, ActNode)
        self.assertEqual(act.number, 1) # Autogenerated
        self.assertEqual(act.title, "One")

    def test_multiple(self):
        doc = Parser().parse_doc("""@act One
@act Two""")

        self.assertIsInstance(doc, DocumentNode)
        self.assertEqual(len(doc.nodes), 2)

        act1 = doc.nodes[0]
        self.assertIsInstance(act1, ActNode)
        self.assertEqual(act1.number, 1) # Autogenerated
        self.assertEqual(act1.title, "One")

        act2 = doc.nodes[1]
        self.assertIsInstance(act2, ActNode)
        self.assertEqual(act2.number, 2) # Autogenerated
        self.assertEqual(act2.title, "Two")

if __name__ == '__main__':
    unittest.main()